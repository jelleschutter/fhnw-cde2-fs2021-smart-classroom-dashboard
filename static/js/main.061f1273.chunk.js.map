{"version":3,"sources":["features/auth/authSlice.ts","store.js","helpers/Request.ts","features/explore/Chart.tsx","features/explore/Explore.tsx","features/auth/Login.tsx","features/auth/Logout.tsx","features/nav/CustomAppBar.tsx","features/dashboard/DashboardItem.tsx","features/dashboard/Dashboard.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["initialToken","localStorage","getItem","initialState","loggedIn","token","authSlice","createSlice","name","reducers","login","state","action","payload","setItem","logout","removeItem","actions","configureStore","reducer","auth","authReducer","request","url","store","getState","fullUrl","headers","Headers","set","fetch","method","then","result","ok","json","dispatch","Promise","reject","Error","statusText","Chart","items","data","datasets","label","map","o","x","insert_timestamp","y","co2","fill","backgroundColor","borderColor","temperature","humidity","distance","type","options","animation","scales","time","unit","displayFormats","hour","day","suggestedMin","Explore","useState","sensor","setSensor","setItems","uuid","useParams","useEffect","fetchData","catch","error","console","log","count","undefined","id","setInterval","clearInterval","className","title","Login","username","setUsername","password","setPassword","useDispatch","Paper","onSubmit","event","preventDefault","btoa","Grid","container","direction","justify","alignItems","spacing","item","TextField","onChange","e","target","value","Button","Logout","to","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","color","textDecoration","CustomAppBar","classes","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","component","Link","variant","minWidth","fontSize","attribute","marginTop","overflow","textOverflow","whiteSpace","DashboardItem","latestMeasurement","setLatestMeasurement","Card","CardContent","gutterBottom","toFixed","CardActions","size","display","flexWrap","margin","width","Dashboard","dashboardItems","App","useSelector","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.061f1273.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialToken = localStorage.getItem('token');\n\nconst initialState = {\n  loggedIn: !!initialToken,\n  token: initialToken\n}\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login(state, action) {\n      state.loggedIn = true;\n      state.token = action.payload;\n      localStorage.setItem('token', action.payload);\n    },\n    logout(state) {\n      state.loggedIn = false;\n      state.token = '';\n      localStorage.removeItem('token');\n    }\n  }\n});\n\nexport const { login, logout } = authSlice.actions;\n\nexport default authSlice.reducer","import { configureStore } from '@reduxjs/toolkit';\n\nimport authReducer from './features/auth/authSlice';\n\nexport default configureStore({\n  reducer: {\n    auth: authReducer\n  }\n});","import store from '../store';\nimport { logout } from '../features/auth/authSlice';\n\nexport const request = (url: string) => {\n  const auth = store.getState().auth;\n  const fullUrl = `https://glusfqycvwrucp9-db202012181437.adb.eu-zurich-1.oraclecloudapps.com/ords/sensor_datalake/sens${url}`;\n  const headers = new Headers();\n  headers.set('Authorization', `Basic ${auth.token}`);\n  return fetch(fullUrl, {\n    method: 'GET',\n    headers\n  })\n    .then(result => {\n      if (result.ok) {\n        return result.json();\n      }\n      store.dispatch(\n        logout()\n      );\n      return Promise.reject(new Error(result.statusText));\n    });\n}","import ChartComponent from 'react-chartjs-2';\nimport 'chartjs-adapter-moment';\n\nimport { Measurement } from '../../model/Measurement';\n\ntype Props = {\n  items: Measurement[]\n}\n\nexport const Chart = ({ items }: Props) => {\n\n  const data = {\n    datasets: [\n      {\n        label: 'CO2',\n        data: items.map(o => ({\n          x: o.insert_timestamp,\n          y: o.co2\n        })),\n        fill: false,\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgba(255, 99, 132, 0.2)',\n      },\n      {\n        label: 'Temperature',\n        data: items.map(o => ({\n          x: o.insert_timestamp,\n          y: o.temperature\n        })),\n        fill: false,\n        backgroundColor: 'rgb(255, 159, 64)',\n        borderColor: 'rgba(255, 159, 64, 0.2)',\n      },\n      {\n        label: 'Humidity',\n        data: items.map(o => ({\n          x: o.insert_timestamp,\n          y: o.humidity\n        })),\n        fill: false,\n        backgroundColor: 'rgb(255, 205, 86)',\n        borderColor: 'rgba(255, 205, 86, 0.2)',\n      },\n      {\n        label: 'Distance',\n        data: items.map(o => ({\n          x: o.insert_timestamp,\n          y: o.distance\n        })),\n        fill: false,\n        backgroundColor: 'rgb(75, 192, 192)',\n        borderColor: 'rgba(75, 192, 192, 0.2)',\n      }\n    ]\n  };\n\n  const options = {\n    animation: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'hour',\n          displayFormats: {\n            hour: 'HH:mm',\n            day: 'DD.MM.YYYY'\n          }\n        }\n      },\n      y: {\n        suggestedMin: 0,\n      }\n    }\n  };\n\n  return <ChartComponent type=\"line\" data={data} options={options} />\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\n\nimport { request } from '../../helpers/Request';\nimport { Measurement } from '../../model/Measurement';\nimport { Chart } from './Chart';\nimport { Sensor } from '../../model/Sensor';\n\ntype Params = {\n  uuid: string\n}\n\nexport const Explore = () => {\n\n  const [sensor, setSensor] = useState<Sensor>();\n  const [items, setItems] = useState<Measurement[]>([]);\n  const { uuid } = useParams<Params>();\n\n  useEffect(() => {\n    const fetchData = () => {\n      if (uuid) {\n        request(`/measurements?q={\"sensor_uuid\":{\"$eq\":\"${uuid}\"},\"$orderby\":{\"insert_timestamp\":\"desc\"}}`)\n          .then((result) => {\n            setItems(result.items);\n          })\n          .catch((error) => console.log(error));\n\n        request(`/sensors?q={\"uuid\":{\"$eq\":\"${uuid}\"}}`)\n          .then((result) => {\n            if (result.count > 0) {\n              setSensor(result.items[0]);\n            } else {\n              setSensor(undefined);\n            }\n          })\n          .catch((error) => console.log(error));\n      } else {\n        setItems([]);\n        setSensor(undefined);\n      }\n    }\n\n    fetchData();\n\n    const id = setInterval(() => {\n      fetchData();\n    }, 30000);\n    return () => clearInterval(id);\n  }, [uuid]);\n\n  return (\n    <div className=\"explore-wrapper\">\n      <h2>{sensor?.title}</h2>\n      <Chart items={items} />\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport './Login.scss';\nimport { login } from './authSlice';\nimport { Button, Grid, Paper, TextField } from '@material-ui/core';\n\nexport const Login = () => {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    dispatch(\n      login(btoa(`${username}:${password}`))\n    )\n  }\n\n  return (\n    <div className=\"login-wrapper\">\n      <Paper>\n        <form onSubmit={handleSubmit}>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item>\n              <TextField label=\"Username\" onChange={(e) => setUsername(e.target.value)} />\n            </Grid>\n            <Grid item>\n              <TextField type=\"password\" label=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n            </Grid>\n            <Grid item>\n              <Button type=\"submit\">Login</Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </div>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router';\n\nimport { logout } from './authSlice';\n\nexport const Logout = () => {\n\n  const dispatch = useDispatch();\n\n  dispatch(logout());\n\n  return (\n    <Redirect to=\"/\" />\n  );\n}\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      color: 'inherit',\n      textDecoration: 'none'\n    },\n  }),\n);\n\nexport const CustomAppBar = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography component={Link} variant=\"h6\" className={classes.title} to=\"/dashboard\">Smart Classroom</Typography>\n          <Button component={Link} color=\"inherit\" to=\"/logout\">Logout</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import { useEffect, useState } from 'react';\nimport { Button, Card, CardActions, CardContent, makeStyles, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport { request } from '../../helpers/Request';\nimport { Measurement } from '../../model/Measurement';\nimport { Sensor as SensorModel } from '../../model/Sensor';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  title: {\n    fontSize: 13\n  },\n  attribute: {\n    marginTop: 10,\n    fontSize: 13\n  },\n  uuid: {\n    fontSize: 14,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  }\n});\n\ntype Props = {\n  sensor: SensorModel\n}\n\nexport const DashboardItem = ({ sensor }: Props) => {\n\n  const classes = useStyles();\n\n  const [latestMeasurement, setLatestMeasurement] = useState<Measurement>();\n  \n  useEffect(() => {\n    const fetchData = () => {\n      if (sensor) {\n        request(`/measurements?q={\"sensor_uuid\":{\"$eq\":\"${sensor.uuid}\"},\"$orderby\":{\"insert_timestamp\":\"desc\"}}?limit=1`)\n          .then((result) => {\n            if (result.count > 0) {\n              setLatestMeasurement(result.items[0]);\n            }\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      } else {\n        setLatestMeasurement(undefined);\n      }\n    }\n\n    fetchData();\n\n    const id = setInterval(() => {\n      fetchData();\n    }, 15000);\n    return () => clearInterval(id);\n  }, [sensor]);\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          Sensor\n        </Typography>\n        <Typography variant=\"h6\" component=\"h2\">\n          {sensor.title}\n        </Typography>\n        <Typography className={classes.uuid} variant=\"body2\" color=\"textSecondary\">\n          {sensor.uuid}\n        </Typography>\n        <Typography className={classes.attribute} color=\"textSecondary\">\n          CO2\n        </Typography>\n        <Typography variant=\"body1\" component=\"p\">\n          {latestMeasurement ? latestMeasurement.co2.toFixed(0) : ''} ppm\n        </Typography>\n        <Typography className={classes.attribute} color=\"textSecondary\">\n          Temperature\n        </Typography>\n        <Typography variant=\"body1\" component=\"p\">\n          {latestMeasurement ? latestMeasurement.temperature.toFixed(1) : ''} C°\n        </Typography>\n        <Typography className={classes.attribute} color=\"textSecondary\">\n          Humidity\n        </Typography>\n        <Typography variant=\"body1\" component=\"p\">\n          {latestMeasurement ? latestMeasurement.humidity.toFixed(0) : ''}%\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button component={Link} size=\"small\" to={`/explore/${sensor.uuid}`}>View latest data</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\n\nimport { request } from '../../helpers/Request';\nimport { Sensor as SensorModel } from '../../model/Sensor';\nimport { DashboardItem } from './DashboardItem';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(1),\n        width: theme.spacing(16)\n      }\n    }\n  })\n);\n\nexport const Dashboard = () => {\n\n  const classes = useStyles();\n\n  const [items, setItems] = useState<SensorModel[]>([]);\n\n  useEffect(() => {\n    request(`/sensors?q={\"$orderby\":{\"title\":\"asc\"}}`)\n      .then((result) => {\n        setItems(result.items);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  });\n\n  const dashboardItems = items.map(sensor => <DashboardItem key={sensor.uuid} sensor={sensor} />)\n  return (\n    <div className={classes.root}>\n      {dashboardItems}\n    </div>\n  )\n}\n","import { useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { Explore } from './features/explore/Explore';\nimport { Login } from './features/auth/Login';\nimport { AuthState, RootState } from './model/State';\nimport { Logout } from './features/auth/Logout';\nimport { CustomAppBar } from './features/nav/CustomAppBar';\nimport { Dashboard } from './features/dashboard/Dashboard';\n\nfunction App() {\n\n  const auth = useSelector<RootState, AuthState>((state) => state.auth);\n\n  if (!auth.loggedIn) {\n    return (\n      <Login />\n    )\n  }\n\n  return (\n    <Router>\n      <CustomAppBar />\n      <Switch>\n        <Route path=\"/logout\">\n          <Logout />\n        </Route>\n        <Route path=\"/dashboard\">\n          <Dashboard />\n        </Route>\n        <Route path=\"/explore/:uuid\">\n          <Explore />\n        </Route>\n        <Route path=\"/\">\n          <Redirect to=\"/dashboard\" />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { CssBaseline } from '@material-ui/core';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <CssBaseline />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}