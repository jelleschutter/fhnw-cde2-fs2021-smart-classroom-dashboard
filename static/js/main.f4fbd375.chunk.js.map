{"version":3,"sources":["features/auth/authSlice.js","components/Filter/Filter.js","components/Chart/Chart.js","features/auth/Login.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["initialState","loggedIn","token","localStorage","getItem","authSlice","createSlice","name","reducers","login","state","action","payload","setItem","logout","actions","Filter","onSensorChange","useState","items","setItems","dispatch","useDispatch","auth","useSelector","triggerSensorChange","useCallback","useEffect","headers","Headers","set","fetch","method","then","result","ok","json","Promise","reject","Error","statusText","sensor","uuid","catch","error","console","log","options","map","value","title","onChange","event","target","Chart","props","url","data","datasets","label","o","x","insert_timestamp","y","co2","fill","backgroundColor","borderColor","temperature","humidity","className","animation","scales","type","time","unit","displayFormats","hour","day","suggestedMin","Login","username","setUsername","password","setPassword","onSubmit","e","preventDefault","btoa","App","setSensor","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","authReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.f4fbd375.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  loggedIn: false,\n  token: localStorage.getItem('token')\n}\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login(state, action) {\n      state.loggedIn = true\n      state.token = action.payload\n      localStorage.setItem('token', action.payload);\n    },\n    logout(state) {\n      state.loggedIn = false\n      state.token = ''\n      localStorage.setItem('token', null);\n    }\n  }\n})\n\nexport const { login, logout } = authSlice.actions\n\nexport default authSlice.reducer","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { logout } from '../../features/auth/authSlice';\n\nexport const Filter = ({ onSensorChange }) => {\n\n  const [items, setItems] = useState([]);\n\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  const triggerSensorChange = useCallback(onSensorChange, [onSensorChange]);\n\n  useEffect(() => {\n    if (auth.loggedIn) {\n      const url = `https://glusfqycvwrucp9-db202012181437.adb.eu-zurich-1.oraclecloudapps.com/ords/sensor_datalake/sens/sensors?q={\"$orderby\":{\"title\":\"asc\"}}`;\n      const headers = new Headers();\n      headers.set('Authorization', `Basic ${auth.token}`);\n      fetch(url, {\n        method: 'GET',\n        headers\n      })\n        .then(result => {\n          if (result.ok) {\n            return result.json();\n          }\n          dispatch(\n            logout()\n          );\n          return Promise.reject(new Error(result.statusText));\n        })\n        .then((result) => {\n          const sensor = result.items[0]?.uuid ?? '';\n          setItems(result.items);\n          triggerSensorChange(sensor);\n        })\n        .catch((error) => {\n          console.log(error);\n          triggerSensorChange('');\n        });\n    } else {\n      setItems([]);\n    }\n  }, [dispatch, triggerSensorChange, auth]);\n\n  const handleChange = (event) => {\n    triggerSensorChange(event.target.value);\n  }\n\n  const options = items.map(sensor => <option key={sensor.uuid} value={sensor.uuid}>{sensor.title}</option>)\n  return (\n    <select onChange={handleChange}>\n      {options}\n    </select>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-moment';\n\nimport { logout } from '../../features/auth/authSlice';\n\nexport const Chart = (props) => {\n\n  const [items, setItems] = useState([]);\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const fetchData = () => {\n    if (auth.loggedIn && props.sensor) {\n      const url = `https://glusfqycvwrucp9-db202012181437.adb.eu-zurich-1.oraclecloudapps.com/ords/sensor_datalake/sens/measurements?q={\"sensor_uuid\":{\"$eq\":\"${props.sensor}\"},\"$orderby\":{\"insert_timestamp\":\"desc\"}}`;\n      const headers = new Headers();\n      headers.set('Authorization', `Basic ${auth.token}`);\n      fetch(url, {\n        method: 'GET',\n        headers\n      })\n        .then(result => {\n          if (result.ok) {\n            return result.json();\n          }\n          dispatch(\n            logout()\n          );\n          return Promise.reject(new Error(result.statusText));\n        })\n        .then((result) => {\n          setItems(result.items);\n        })\n        .catch((error) => console.log(error));\n    } else {\n      setItems([]);\n    }\n  }\n\n  useEffect(fetchData, [dispatch, props, auth]);\n\n  const data = {\n    datasets: [\n      {\n        label: 'CO2',\n        data: items.map(o => ({\n          x: o.insert_timestamp,\n          y: o.co2\n        })),\n        fill: false,\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgba(255, 99, 132, 0.2)',\n      },\n      {\n        label: 'Temperature',\n        data: items.map(o => ({\n          x: o.insert_timestamp,\n          y: o.temperature\n        })),\n        fill: false,\n        backgroundColor: 'rgb(255, 159, 64)',\n        borderColor: 'rgba(255, 159, 64, 0.2)',\n      },\n      {\n        label: 'Humidity',\n        data: items.map(o => ({\n          x: o.insert_timestamp,\n          y: o.humidity\n        })),\n        fill: false,\n        backgroundColor: 'rgb(255, 205, 86)',\n        borderColor: 'rgba(255, 205, 86, 0.2)',\n      }\n    ]\n  };\n\n  const options = {\n    animation: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'hour',\n          displayFormats: {\n            hour: 'HH:mm',\n            day: 'DD.MM.YYYY'\n          }\n        }\n      },\n      y: {\n        suggestedMin: 0,\n      }\n    }\n  };\n\n  return (\n    <div className=\"Chart\">\n      <Line data={data} options={options} />\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { login } from './authSlice';\n\nexport const Login = () => {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      login(btoa(`${username}:${password}`))\n    )\n  }\n\n  return (\n    <div className=\"login-wrapper\">\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Username</p>\n          <input type=\"text\" onChange={(e) => setUsername(e.target.value)} />\n        </label>\n        <label>\n          <p>Password</p>\n          <input type=\"password\" onChange={(e) => setPassword(e.target.value)} />\n        </label>\n        <div>\n          <button type=\"submit\">Login</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport './App.css';\nimport { Filter } from './components/Filter/Filter';\nimport { Chart } from './components/Chart/Chart';\nimport { Login } from './features/auth/Login';\n\nfunction App() {\n\n  const [sensor, setSensor] = useState('');\n\n  const auth = useSelector((state) => state.auth);\n\n  if (!auth.loggedIn) {\n    return <Login />\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <Router>\n        <Switch>\n          <Route path=\"/logout\">\n            <h1>Logout</h1>\n          </Route>\n          <Route path=\"/\">\n            <Filter onSensorChange={setSensor} />\n            <Chart sensor={sensor} />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport authReducer from './features/auth/authSlice';\n\nexport default configureStore({\n  reducer: {\n    auth: authReducer\n  }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}